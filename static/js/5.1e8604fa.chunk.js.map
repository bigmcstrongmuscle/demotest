{"version":3,"sources":["components/content/userpage/userpagewall/post/post.module.css","components/common/userstatus/userabout.module.css","components/content/userpage/userpagewall/form/form.jsx","components/content/userpage/userpagewall/post/post.jsx","components/content/userpage/userpagewall/userPageWall.jsx","components/common/userstatus/userstatus.jsx","components/content/userpage/userpageinfo/userPage.jsx","components/content/userpage/userPageContainer.jsx"],"names":["module","exports","Form","props","textarea","React","createRef","action","onSubmit","e","preventDefault","addNewPost","className","s","postInfoWrapper","src","userpic","alt","userName","postConent","name","id","ref","value","currentInput","onChange","setCurrentInput","current","type","Post","post","key","comPic","commentDate","postText","UserPageWall","posts","userWall","map","userForm","comName","Userstatus","state","editMode","localStatus","status","_input","setState","target","this","prevProps","prevState","snapshot","userAbout","_ref","onBlur","_deactivateEditMode","bind","autoFocus","onDoubleClick","_activateEditMode","p","updateStatus","Component","UserPage","userId","photos","large","fullName","lookingForAJobDescription","profile","match","params","setUserInfoThunkCreator","getUserStatusThunkCreator","console","log","userInfo","UserPageContainer","compose","withAuthRedirect","connect","userPage","withRouter"],"mappings":"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","file":"static/js/5.1e8604fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"s\":\"post_s__1SBmc\",\"postInfoWrapper\":\"post_postInfoWrapper__3JENH\",\"postConent\":\"post_postConent__32AFE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userAbout\":\"userabout_userAbout__Uem10\",\"p\":\"userabout_p__t94UF\"};","import React from 'react';\r\nimport s from \"../post/post.module.css\";\r\n\r\nlet Form =(props) => {\r\n    let textarea = React.createRef();\r\n\r\n    let input = () => {\r\n        props.setCurrentInput(textarea.current.value);\r\n    }\r\n\r\n    let addPost = (e) => {\r\n        e.preventDefault();\r\n        props.addNewPost();\r\n    }\r\n\r\n    return <form action=\"#\" onSubmit={addPost}>\r\n        <div className={s.postInfoWrapper}>\r\n            <img src={props.userpic} alt=\"\"/>\r\n            <span>{props.userName}</span>\r\n        </div>\r\n        <div className={s.postConent}>\r\n            <textarea name=\"post\" id=\"\"\r\n                ref = {textarea}\r\n                value = {props.currentInput}\r\n                onChange = {input}\r\n            />\r\n            <button type=\"submit\">Оправить</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\nimport s from './post.module.css';\r\n\r\nlet Post = (props) => {\r\n    return <div className={s.post} key={props.key}>\r\n        <div className={s.postInfoWrapper}>\r\n            <img src={props.comPic} alt={props.userName}/>\r\n            <span>{props.userName}</span>\r\n            <span>{props.commentDate}</span>\r\n        </div>\r\n        <div className={s.postConent}>\r\n            {props.postText}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport Form from \"./form/form\";\r\nimport Post from \"./post/post\";\r\n\r\n\r\nlet UserPageWall = (props) => {\r\n    let posts = props.userWall.map(post => <Post\r\n        userName    = {post.userName}\r\n        commentDate = {post.commentDate}\r\n        postText    = {post.postText}\r\n        comPic      = {post.comPic}\r\n        key         = {post.id}\r\n    />);\r\n    return <div>\r\n        <div>\r\n            <Form\r\n                currentInput    = {props.currentInput}\r\n                comPic          = {props.userForm.comPic}\r\n                comName         = {props.userForm.comName}\r\n                addNewPost      = {props.addNewPost}\r\n                setCurrentInput = {props.setCurrentInput}\r\n            />\r\n        </div>\r\n        <div>{posts}</div>\r\n    </div>\r\n}\r\n\r\nexport default UserPageWall;","import React from \"react\";\r\nimport s from './userabout.module.css'\r\n\r\nclass Userstatus extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.setState({localStatus: this.props.status});\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        //элемент жизненного цикла компонента\r\n        //срабатывает после всех изменений и отрисовки компонента\r\n        if(prevProps.status != this.props.status) {\r\n            this.setState(this.props.status);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //ВАЖНО сразу поместить фокус на нужный элемент, что сработало onBlur\r\n        return <div className={s.userAbout}>\r\n            {this.state.editMode ? <div>\r\n                <input type=\"text\" value={this.state.localStatus}\r\n                                   ref = {this._ref}\r\n                                   onChange={this._input}\r\n                                   onBlur={this._deactivateEditMode.bind(this)}\r\n                                   autoFocus={true}/>\r\n            </div> :\r\n            <div>\r\n                <p onDoubleClick={this._activateEditMode.bind(this)} className={s.p}>{this.state.localStatus}</p>\r\n            </div>}\r\n        </div>\r\n    }\r\n\r\n    state = {\r\n        editMode: false,\r\n        localStatus: this.props.status\r\n    }\r\n\r\n    _activateEditMode() {\r\n        this.setState({editMode: true});\r\n    }\r\n\r\n    _deactivateEditMode() {\r\n        this.setState({editMode: false});\r\n        this.props.updateStatus(this.state.localStatus);\r\n    }\r\n\r\n    _input = (e) => {//как прокинуть аргументы в функцию вместе с bind?\r\n        //this.setState({status: this._ref.current.value});\r\n\r\n        this.setState({localStatus: e.target.value});\r\n    }\r\n\r\n    //_ref = React.createRef();\r\n}\r\n\r\nexport default Userstatus;","import React from \"react\";\r\nimport Userstatus from \"../../../common/userstatus/userstatus\";\r\n\r\nlet UserPage = (props) => {\r\n    if(!props.userId) return <div></div>;\r\n    return <div>\r\n        <div>\r\n            <img src={props.photos.large} alt={props.fullName}/>\r\n        </div>\r\n        <div>\r\n            <span>{props.fullName}</span>\r\n            <Userstatus status={props.status}/>\r\n            <span>{props.lookingForAJobDescription}</span>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default UserPage;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {\r\n    addNewPost, getUserStatusThunkCreator,\r\n    setCurrentInput,\r\n    setUserInfoThunkCreator,\r\n} from \"../../../redux/userPageReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport UserPageWall from \"./userpagewall/userPageWall\";\r\nimport Profile from \"./userpageinfo/userPage\";\r\nimport {compose} from \"redux\";\r\n\r\nclass UserPage extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let profile = this.props.match.params.userId; //!!!!!\r\n        if(!profile) profile = 2;\r\n        this.props.setUserInfoThunkCreator(profile);\r\n        this.props.getUserStatusThunkCreator(profile);\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        return <div>\r\n            <Profile {...this.props.userInfo} status={this.props.status}/>\r\n            <UserPageWall\r\n                userWall = {this.props.userWall}\r\n                userForm = {this.props.userForm}\r\n                currentInput = {this.props.currentInput}\r\n                addNewPost = {this.props.addNewPost}\r\n                setCurrentInput = {this.props.setCurrentInput}\r\n            />\r\n        </div>\r\n    }\r\n\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    userInfo: state.userPage.userInfo,\r\n    userWall: state.userPage.userWall,\r\n    userForm: state.userPage.userForm,\r\n    currentInput: state.userPage.currentInput,\r\n    status: state.userPage.status,\r\n})\r\n\r\nlet UserPageContainer = compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {setUserInfoThunkCreator, addNewPost, setCurrentInput, getUserStatusThunkCreator}),\r\n    withRouter\r\n)(UserPage);\r\n\r\nexport default UserPageContainer;"],"sourceRoot":""}