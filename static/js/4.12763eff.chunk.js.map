{"version":3,"sources":["components/common/paginator/paginator.module.css","components/content/findUsers/findUsers/findUsers.module.css","components/common/paginator/Paginator.jsx","components/content/findUsers/findUsers/findUsers.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/content/findUsers/findUsers/user/user.jsx","components/content/findUsers/findUsersContainer.js"],"names":["module","exports","Paginator","totalItemsCount","pageSize","currentPage","portionSize","changeActivePage","useState","portionNumber","setPortion","portionAmount","Math","ceil","portionMinItemNumber","portionMaxItemNumber","pagination","i","push","key","href","onClick","e","preventDefault","className","s","active","toLeftNavButton","toRightNavButton","Findusers","findusers","totalUserCount","isFetching","getusers","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","createCacheKeyComparator","cache","equals","entry","get","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","requestUsersSuperSelector","state","pageNumber","followingInProgress","arg","User","id","photos","status","followed","unfollow","follow","to","src","small","userPhoto","alt","style","findUserImg","disabled","some","followingId","UsersContainer","_getusers","props","user","_follow","_unfollow","unFollowSuccess","followSuccess","this","findUserThunkCreator","window","cap","_changeActivePage","bind","whereto","pagesize","React","Component","Finduserscontainer","compose","connect","withAuthRedirect"],"mappings":"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","file":"static/js/4.12763eff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"paginator_pagination__qYxxT\",\"active\":\"paginator_active__1joBi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findUserImg\":\"findUsers_findUserImg__x8p72\"};","import React, {useState} from \"react\";\r\nimport s from \"./paginator.module.css\";\r\n\r\nexport let Paginator = ({totalItemsCount, pageSize, currentPage, portionSize, changeActivePage}) => {\r\n\r\n\r\n    let [portionNumber, setPortion] = useState(1); //массив, это массив!!!!!!!!!!!!!!!!!!!!!!\r\n    let portionAmount =  Math.ceil(totalItemsCount / portionSize);\r\n    let portionMinItemNumber = (portionNumber - 1)*portionSize + 1;\r\n    let portionMaxItemNumber = portionNumber*portionSize;\r\n\r\n    let pagination = [];\r\n\r\n    for(let i = 1; i <= Math.ceil(totalItemsCount / pageSize); i++) {\r\n        if(i < portionMinItemNumber || i > portionMaxItemNumber) continue;\r\n        pagination.push(<li key={i}><a href=\"#\"\r\n                                       onClick={(e)=>{e.preventDefault(); changeActivePage(i);}}\r\n                                       className={currentPage === i ? s.active : null}\r\n        >{i}</a></li>);\r\n    };\r\n\r\n    let toLeftNavButton = portionNumber > 1 && <button onClick={() => setPortion(portionNumber - 1)}>Назад</button>;\r\n    let toRightNavButton = portionAmount > portionNumber && <button onClick={() => setPortion(portionNumber + 1)}>Вперёд</button>;\r\n\r\n    return <span>{toLeftNavButton}<ul className={s.pagination}>{pagination}</ul>{toRightNavButton}</span>\r\n}","import React      from 'react';\r\nimport Preloader from \"../../../common/preloader/preloader\";\r\nimport {Paginator} from \"../../../common/paginator/Paginator\";\r\n\r\nlet Findusers = ({findusers: {totalUserCount, pageSize, portionSize, currentPage, isFetching}, changeActivePage, getusers, ...rest}) => {\r\n    /*let pagination = [];\r\n    for(let i = 1; i <= Math.ceil(props.findusers.totalUserCount / props.findusers.pageSize); i++) {\r\n        pagination.push(<li key={i}><a href=\"#\"\r\n                               onClick={(e)=>{e.preventDefault(); props.changeactivepage(i);}}\r\n                               className={props.findusers.currentPage === i ? style.active : null}\r\n        >{i}</a></li>);\r\n    };*/\r\n    return (\r\n        <div>\r\n\r\n                {<Paginator totalItemsCount={totalUserCount}\r\n                            pageSize={pageSize}\r\n                            portionSize={portionSize}\r\n                            currentPage={currentPage}\r\n                            changeActivePage={changeActivePage}/>}\r\n\r\n            {isFetching ? <Preloader /> : null}\r\n            <div>{getusers()}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Findusers;","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import {createSelector} from \"reselect\";\r\n\r\nexport const requestUsers = (state) => ({\r\n    currentPage: state.findusers.currentPage,\r\n    findusers: state.findusers.findusers,\r\n    pageSize: state.findusers.pageSize,\r\n    pageNumber: state.findusers.pageNumber,\r\n    totalUserCount: state.findusers.totalUserCount,\r\n    isFetching: state.findusers.isFetching,\r\n    followingInProgress: state.findusers.followingInProgress,\r\n    portionSize: state.findusers.portionSize,\r\n});\r\n//реакт и редукс живут и внутри всё время что-то происходит\r\n//значит всегда вызываются сначала mapStateToProps и, вслед за ним, селекторы, в которых может быть и более времязатратная логика\r\n//кроме того из-за принципа неизменяемости, иммутабельности необходимо каждый раз возвращать новый объект\r\n//чтобы избежать постоянных перерисовок приложения и облегчить дебаженье нужно подключить библиотеку селектров\r\n//например, reselect\r\n\r\n//необходимы простые селекторы, возвращающие свои кусочки общего объекта состояния\r\n//так же необходима функция, обрабатывающая результаты работы простых селекторов\r\n//кэширование и сравнение происходит внутри библиотеки\r\nexport const requestUsersSuperSelector = createSelector([requestUsers], (arg) => {\r\n    //тут должна быть сложная логика обработки\r\n    //но она просто не нужна в этом проекте\r\n    return arg; //filter возвращает новый объект, это важно\r\n})","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../../../../assets/userphoto.jpg\";\r\nimport style from \"../findUsers.module.css\";\r\n\r\nexport const User = ({id, photos, name, status, followed, followingInProgress, unfollow, follow}) => <div>\r\n    <NavLink to={\"/profile/\"+id}>\r\n        <img src={photos.small ? photos.small : userPhoto} alt={name} className={style.findUserImg}/>\r\n    </NavLink>\r\n    <p>{name}</p>\r\n    <p>{status}</p>\r\n    {followed\r\n        ? <button\r\n            disabled={followingInProgress.some(followingId => followingId === id)}\r\n            onClick={() => unfollow(id)} id={id}>Отписаться</button>\r\n        : <button\r\n            disabled={followingInProgress.some(followingId => followingId === id)}\r\n            onClick={() => follow(id)}>Подписаться</button>\r\n    }\r\n</div>","import Findusers from \"./findUsers/findUsers\";\r\nimport {connect} from \"react-redux\";\r\nimport {findUserThunkCreator, followSuccess, unFollowSuccess,} from \"../../../redux/findUsersReducer\";\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {requestUsersSuperSelector} from \"../../../redux/selectors\";\r\nimport {User} from \"./findUsers/user/user\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.findUserThunkCreator(this.props.pageNumber, this.props.pageSize);\r\n        window.cap = this._changeActivePage.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return <Findusers\r\n                    findusers = {this.props}\r\n                    getusers  = {this._getusers.bind(this)}\r\n                    changeActivePage = {this._changeActivePage.bind(this)}\r\n                />}\r\n\r\n    _changeActivePage(whereto, pagesize) {\r\n        return this.props.findUserThunkCreator(whereto, pagesize);\r\n    }\r\n\r\n    _getusers = () => {\r\n        return this.props.findusers.map(user =>  <User photos={user.photos}\r\n                                                       id={user.id}\r\n                                                       name={user.name}\r\n                                                       status={user.status}\r\n                                                       followed={user.followed}\r\n                                                       follow={this._follow}\r\n                                                       unfollow={this._unfollow}\r\n                                                       followingInProgress={this.props.followingInProgress}\r\n                                                       key={user.id}\r\n            />\r\n        );\r\n    }\r\n\r\n    _unfollow = (id) => {\r\n        this.props.unFollowSuccess(id);\r\n    }\r\n\r\n    _follow = (id) => {\r\n        this.props.followSuccess(id);\r\n    }\r\n};\r\n\r\n/*let mapStateToProps = (state) =>  {\r\n    return ({\r\n        findusers  : state.findusers,\r\n    })\r\n};*/\r\n\r\nlet mapStateToProps = (state) =>  ({...requestUsersSuperSelector(state)});\r\n//реакт и редукс живут и внутри всё время что-то происходит\r\n//значит всегда вызываются сначала mapStateToProps и, вслед за ним, селекторы, в которых может быть и более времязатратная логика\r\n//кроме того из-за принципа неизменяемости, иммутабельности необходимо каждый раз возвращать новый объект\r\n//чтобы избежать постоянных перерисовок приложения и облегчить дебаженье нужно подключить библиотеку селектров\r\n//например, reselect\r\n\r\n/*let mapDispatchToProps = (dispatch) => ({\r\n    follow            : id => dispatch(followAC(id)),\r\n    unfollow          : id => dispatch(unfollowAC(id)),\r\n    getmore           : users => dispatch(getMoreAC(users)),\r\n    settotalusercount : counter => dispatch(setTotalUSerCountAC(counter)),\r\n    setCurrentPage    : page => dispatch(setCurrentPageAC(page)),\r\n    setFetchingState  : state => dispatch(setFetchingStateAC(state)),\r\n});*/\r\n\r\nlet Finduserscontainer = compose(connect(mapStateToProps, {findUserThunkCreator, unFollowSuccess, followSuccess}),\r\n                                withAuthRedirect)(UsersContainer);\r\n\r\n\r\nexport default Finduserscontainer;"],"sourceRoot":""}